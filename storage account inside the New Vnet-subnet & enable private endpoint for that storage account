# Create a resource group
resource "azurerm_resource_group" "example" {
  name     = "example-resource-group"
  location = "eastus"
}

# Create a virtual network
resource "azurerm_virtual_network" "example" {
  name                = "example-vnet"
  address_space       = ["10.0.0.0/16"]
  location            = "${azurerm_resource_group.example.location}"
  resource_group_name = "${azurerm_resource_group.example.name}"
}

# Create a subnet
resource "azurerm_subnet" "example" {
  name                 = "example-subnet"
  address_prefixes     = ["10.0.1.0/24"]
  virtual_network_name = "${azurerm_virtual_network.example.name}"
  resource_group_name  = "${azurerm_resource_group.example.name}"
}

# Create a private endpoint for storage account
resource "azurerm_private_endpoint" "storage" {
  name                = "storage-endpoint"
  location            = "${azurerm_resource_group.example.location}"
  resource_group_name = "${azurerm_resource_group.example.name}"
  subnet_id           = "${azurerm_subnet.example.id}"

  private_service_connection {
    name                           = "storage-connection"
    private_connection_resource_id = "${azurerm_storage_account.example.id}"
    is_manual_connection           = false
  }

  # Define the required network policies
  network_interfaces {
    id = "${azurerm_network_interface.storage.id}"

    # Allow traffic to the storage account on port 443 (HTTPS)
    # Deny all other inbound and outbound traffic by default
    ip_configurations {
      name                          = "privateEndpointConfig"
      private_ip_address_allocation = "Dynamic"
      subnet_id                     = "${azurerm_subnet.example.id}"
      primary                       = true
      private_ip_address_version    = "IPv4"
      load_balancer_backend_address_pools_ids = []
      load_balancer_inbound_nat_rules_ids    = []
    }
  }
}

# Create a storage account
resource "azurerm_storage_account" "example" {
  name                     = "examplestorageaccount"
  resource_group_name      = "${azurerm_resource_group.example.name}"
  location                 = "${azurerm_resource_group.example.location}"
  account_tier             = "Standard"
  account_replication_type = "LRS"

  network_rules {
    default_action = "Deny"
    virtual_network_subnet_ids = [
      "${azurerm_subnet.example.id}"
    ]
  }

  # Enable private endpoint
  private_endpoint_connection {
    name                      = "storage-endpoint"
    private_endpoint_id       = "${azurerm_private_endpoint.storage.id}"
    is_manual_connection      = false
    private_link_service_id   = "${azurerm_storage_account.example.id}"
    request_message           = "Please approve the private endpoint connection request"
  }
}
